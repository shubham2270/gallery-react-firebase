{"version":3,"sources":["components/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","hooks/useFirestore.js","components/Image.js","components/ImageGrid.js","components/Modal.js","components/SignIn.js","App.js","index.js"],"names":["Title","className","Typography","variant","target","href","firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","projectFirestore","auth","provider","GoogleAuthProvider","timestamp","FieldValue","serverTimestamp","signInWithGoogle","signInWithPopup","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","Box","display","alignItems","width","mr","LinearProgress","value","minWidth","color","Math","round","UploadForm","types","type","onChange","e","selected","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","Image","setSelectedImg","isAdmin","confirmDelete","imageId","window","confirm","console","log","delete","then","catch","removeImage","div","style","key","layout","whileHover","opacity","s","onClick","img","src","alt","initial","animate","transition","delay","Button","size","startIcon","ImageGrid","map","Modal","selectedImg","classList","contains","y","SignIn","userData","setUserData","onAuthStateChanged","user","signOut","App","email","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7240ea24.chunk.js","sourcesContent":["import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Title = () => {\n  return (\n    <div className='title'>\n      <Typography variant='h1'>Sneha's gallery</Typography>\n      <Typography variant='h2'>Sneha Gupta Art & Paintings</Typography>\n      <p>\n        Learn these drawings/paintings from basic to advanced in{\" \"}\n        <a\n          target='_blank'\n          href='https://www.youtube.com/channel/UCM-Xo1DRAj7BjQFSTBm74zQ'\n        >\n          Kids Art Creation\n        </a>{\" \"}\n        Youtube channel\n      </p>\n    </div>\n  );\n};\n\nexport default Title;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MESUREMENT_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nconst signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\n\nexport { projectStorage, projectFirestore, timestamp, auth, signInWithGoogle };\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    \n    storageRef.put(file).on('state_changed', (snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n    }, (err) => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      await collectionRef.add({ url, createdAt });\n      setUrl(url);\n    });\n  }, [file]);\n\n  return { progress, url, error };\n}\n\nexport default useStorage;","import React, { useEffect } from \"react\";\nimport useStorage from \"../hooks/useStorage\";\nimport { motion } from \"framer-motion\";\nimport { LinearProgress, Box, Typography } from \"@material-ui/core\";\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <>\n      <Box display='flex' alignItems='center'>\n        <Box width='100%' mr={1}>\n          <LinearProgress variant='determinate' value={progress} />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant='body2' color='textSecondary'>{`${Math.round(\n            progress\n          )}%`}</Typography>\n        </Box>\n      </Box>\n      {/* <motion.div\n        className='progress-bar'\n        initial={{ width: 0 }}\n        animate={{ width: progress + \"%\" }}\n      ></motion.div> */}\n    </>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from \"react\";\nimport ProgressBar from \"./ProgressBar\";\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  const handleChange = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image file (png or jpg)\");\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type='file' onChange={handleChange} />\n        <span>+</span>\n      </label>\n      <div className='output'>\n        {error && <div className='error'>{error}</div>}\n        {file && <div>{file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile} />}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;\n","import { useState, useEffect } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n    // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFirestore;\n","import React, { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { projectFirestore } from \"../firebase/config\";\n\nconst Image = ({ setSelectedImg, doc, isAdmin }) => {\n  const collectionRef = projectFirestore.collection(\"images\");\n\n  // Deletes the image from database\n  const removeImage = (imageId) => {\n    collectionRef\n      .doc(imageId)\n      .delete()\n      .then(() => {\n        console.log(\"Image successfully deleted!\");\n      })\n      .catch((error) => {\n        console.log(\"Error deleting image\", error);\n      });\n  };\n\n  const confirmDelete = (imageId) => {\n    const userAction = window.confirm(\"Are you sure you want to delete image?\");\n\n    if (userAction) {\n      console.log(\"DELETED!!!!\");\n      removeImage(imageId);\n    } else {\n      console.log(\"CANCELLED\");\n      return;\n    }\n  };\n\n  return (\n    <div className='column'>\n      <motion.div\n        // className='column'\n        style={{ width: \"100%\" }}\n        key={doc.id}\n        layout\n        whileHover={{ opacity: 1 }}\n        s\n        onClick={() => setSelectedImg(doc.url)}\n      >\n        <motion.img\n          src={doc.url}\n          alt='uploaded pic'\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1 }}\n        />\n      </motion.div>\n      {isAdmin && (\n        <Button\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => confirmDelete(doc.id)}\n          startIcon={<DeleteIcon />}\n        >\n          DELETE IMAGE\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import React, { useState } from \"react\";\nimport useFirestore from \"../hooks/useFirestore\";\n// import { motion } from \"framer-motion\";\n// import { Grid } from \"react-responsive-image-grid\";\n\n// import useWindowSize from \"../hooks/useWindowSize\";\n\nimport Image from \"./Image\";\n\nconst ImageGrid = ({ setSelectedImg, isAdmin }) => {\n  const { docs } = useFirestore(\"images\");\n\n  // get width & height of image\n  // const dimensions = (imgSrc: string) => {\n  //   // Create new offscreen image to test\n  //   const theImage = new Image();\n  //   theImage.src = imgSrc;\n  //   // Get accurate measurements from that.\n  //   const imageWidth = theImage.width;\n  //   const imageHeight = theImage.height;\n  //   // Create an object to save the image width and height\n  //   const imgDimensions = { width: imageWidth, height: imageHeight };\n  //   // Return the result\n  //   return imgDimensions;\n  // };\n\n  return (\n    <div className='row'>\n      {docs &&\n        docs.map((doc) => (\n          <Image doc={doc} setSelectedImg={setSelectedImg} isAdmin={isAdmin} />\n        ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  }\n\n  return (\n    <motion.div className=\"backdrop\" onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img src={selectedImg} alt=\"enlarged pic\" \n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  )\n}\n\nexport default Modal;","import React, { useState, useEffect } from \"react\";\nimport { auth, signInWithGoogle } from \"../firebase/config\";\nimport { Button } from \"@material-ui/core\";\n\nconst SignIn = ({ file, setFile }) => {\n  const [userData, setUserData] = useState(\"\");\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => setUserData(user));\n  }, [setUserData]);\n\n  return (\n    <>\n      {userData ? (\n        <Button\n          variant='contained'\n          color='secondary'\n          onClick={() => auth.signOut()}\n        >\n          Sign Out\n        </Button>\n      ) : (\n        <Button variant='contained' color='primary' onClick={signInWithGoogle}>\n          SignIn With Google\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default SignIn;\n","import React, { useState, useEffect } from \"react\";\nimport Title from \"./components/Title\";\nimport UploadForm from \"./components/UploadForm\";\nimport ImageGrid from \"./components/ImageGrid\";\nimport Modal from \"./components/Modal\";\nimport SignIn from \"./components/SignIn\";\nimport { auth } from \"./firebase/config\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [userData, setUserData] = useState(\"\");\n\n  const adminEmails = [\"shubham2270@gmail.com\", \"guptasneha.sg53@gmail.com\"];\n\n  const isAdmin = adminEmails.includes(userData?.email);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => setUserData(user));\n  }, [setUserData]);\n\n  return (\n    <div className='App'>\n      <Title />\n      <SignIn />\n      {isAdmin && <UploadForm />}\n      <ImageGrid setSelectedImg={setSelectedImg} isAdmin={isAdmin} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}